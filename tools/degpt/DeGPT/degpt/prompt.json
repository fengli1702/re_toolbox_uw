[
    {
        "type": "referee",
        "name": "direction",
        "prompt": {
            "role": "user",
            "content": "For better readability and simplicity, what can be done for the following C language functions? List them one by one. Don't show the code. {code}"
        }
    },
    {
        "type": "advisor",
        "name": "add_comment",
        "prompt": {
            "role": "user",
            "content": "Help me add code comments for the code snippet in the following C code. No explanation.\n{code}"
        }
    },
    {
        "type": "advisor",
        "name": "rename_var",
        "prompt": {
            "role": "user",
            "content": "Help me rename the variables for the code snippet in the following C code. Output the old name and its new name in a *single* JSON dictionary. Do not use any markdown formatting. For example, use {{\"old_name\": \"new_name\"}} to represent replace the variable name \"old_name\" with \"new_name\". No explanation. \\n {code}"
        }
    },
    {
        "type": "advisor",
        "name": "rename_func",
        "prompt": {
            "role": "user",
            "content": "Rename the following C functions. No explanation. Just output new name with quote, like \"new name\".\n{code}"
        }
    },
    {
        "type": "advisor",
        "name": "remove_unnecessary",
        "prompt": {
            "role": "user",
            "content": "Simplify the following C functions by removing redundant variables and unnecessary code. No explanation. Don't change the variable types and function semantics.{code}"
        }
    },
    {
        "type": "advisor",
        "name": "reconstruct_struct", 
        "prompt": {
            "role": "user",
            "content": "Analyze the following C functions, if they contain unclear pointer access, convert to simplified, human-like C code. Prefer readable-style over low-level and definitely do not change any function call or variable, or alter function semantics or add unexisted check. No explanation. \n{code}"
        }
    },
    {
        "type": "advisor",
        "name": "cf_simplify",
        "prompt": {
            "role": "user",
            "content": "Analyze the control flow of the following C functions. Refactor complex or non-standard control flow structures into equivalent C constructs and definitely do not alter function semantics or add unexisted check. No explanation. \n{code}"
        }
    },
    {
        "type": "advisor",
        "name": "reconstruct_lib", 
        "prompt": {
            "role": "user",
            "content": "Analyze the following C functions. Identify any function call that manually implements functionality equivalent to a standard C library function. If so, output the old name and its new name in a *single* JSON dictionary. Do not use any markdown formatting. For example, use {{\"old_name\": \"new_name\"}} to represent replace the function call name \"old_name\" with \"new_name\". No explanation. \\n {code}"
        }
    },
    {
        "type": "referee",
        "name": "need",
        "prompt": {
            "role": "user",
            "content": "Do you think the following code needs structure simplification, comment appending, variable renaming, unclear pointer access, unclear control flow refactoring, and unclear library call? Answer six yes or no in order. No explanation. \n{code}"
        }
    }
    
]